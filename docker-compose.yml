version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "${DATABASE_URL}"
      DATABASE_USER: "${DATABASE_USER}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
    ports:
      - "8082:8082"
    volumes:
      - ./conf:/opt/traccar/conf

  webapp:
    build:
      context: ./backend/traccar/traccar-web
      dockerfile: ../../webapp/Dockerfile.webapp
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/ssl/certs:ro
    ports:
      - "443:443"
    depends_on:
      - webapp
      - backend
    environment:
      - EC2_PUBLIC_IP=${EC2_PUBLIC_IP}

volumes:
  db_data: